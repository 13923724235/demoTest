//
//  MessagesViewController.m
//  MessagesExtension
//
//  Created by 007 on 2017/5/31.
//  Copyright © 2017年 wkj. All rights reserved.
//

#import "MessagesViewController.h"

#import "MyCustomCompactViewController.h"
#import "AddStickerViewController.h"


@interface MessagesViewController ()

    <
        MyCustomCompactViewControllerDelegate,
        AddStickerViewControllerDelegate,
        UIImagePickerControllerDelegate,
        UINavigationControllerDelegate
    >

@property (nonatomic, strong) MyCustomCompactViewController *myCustomCompactViewController  ;

@property (nonatomic, strong) AddStickerViewController *addStickerViewController ;

@end

@implementation MessagesViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self createMyCollectionViewController];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    
}

#pragma mark - MyCustomCompactViewControllerDelegate

-(void)myCustomCompactViewControllerDidSelectAddOtherStickerItem
{
    [self tapToAddNewStickerViewController];
}

#pragma mark - AddStickerViewControllerDelegate

-(void)addStickerViewControllerDidSelectSticker:(MSSticker *)sticker{
    
    [self.myCustomCompactViewController addNewSticker:sticker];
    
    [self requestPresentationStyle:MSMessagesAppPresentationStyleCompact];
    
}

#pragma mark - Conversation Handling

-(void)didBecomeActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the inactive to active state.
    // This will happen when the extension is about to present UI.
    
    // Use this method to configure the extension and restore previously stored state.
}

-(void)willResignActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the active to inactive state.
    // This will happen when the user dissmises the extension, changes to a different
    // conversation or quits Messages.
    
    // Use this method to release shared resources, save user data, invalidate timers,
    // and store enough state information to restore your extension to its current state
    // in case it is terminated later.
}

-(void)didReceiveMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when a message arrives that was generated by another instance of this
    // extension on a remote device.
    
    // Use this method to trigger UI updates in response to the message.
}

-(void)didStartSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user taps the send button.
}

-(void)didCancelSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user deletes the message without sending it.
    
    // Use this to clean up state related to the deleted message.
}

-(void)willTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called before the extension transitions to a new presentation style.
    
    // Use this method to prepare for the change in presentation style.
}

-(void)didTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called after the extension transitions to a new presentation style.
    
    // Use this method to finalize any behaviors associated with the change in presentation style.
    
    [super didTransitionToPresentationStyle:presentationStyle];
    
    if (presentationStyle == MSMessagesAppPresentationStyleExpanded) {

    }
    else{
        [self.addStickerViewController removeFromParentViewController];
        [self.addStickerViewController.view removeFromSuperview];
    }
}

#pragma mark - private method

- (void)createMyCollectionViewController{
    
    self.myCustomCompactViewController = [[MyCustomCompactViewController alloc] init];
    self.myCustomCompactViewController.delegate = self;
    
    [self presentMyCustomCompactViewController];
}

- (void)tapToAddNewStickerViewController{
    
    self.addStickerViewController = [[AddStickerViewController alloc] init];
    
    self.addStickerViewController.delegate = self;
    
    [self addChildViewController:self.addStickerViewController];
    [self.view addSubview:self.addStickerViewController.view];
    
    [self requestPresentationStyle:MSMessagesAppPresentationStyleExpanded];
}

- (void)presentMyCustomCompactViewController{
    
    [self addChildViewController:self.myCustomCompactViewController];
    [self.view addSubview:self.myCustomCompactViewController.view];
}

- (void)presentAddStickerViewController{
    
}


@end
